#!/bin/bash

SCRIPT_DIR=$(dirname $(readlink -f $0))
source $SCRIPT_DIR/config-machine

WANT_SEAT=$(echo $1 | cut -d":" -f 2)
WANT_MACHINE=$(echo $1 | cut -d":" -f 1)

MACHINE=${WANT_MACHINE:-"default"}
SEAT=${WANT_SEAT:-"$MACHINE"}

MACHINE_PATH="$VM_PREFIX/$MACHINE"
MACHINE_DISKS="$VM_PREFIX/$MACHINE/disks"

if [ "x$MACHINE" == "x" ]; then
	echo "Usage:"
	echo "$0 [machine-name]"
	exit 3
fi

if [ ! -d "$MACHINE_PATH" ]; then
	echo "Machine $MACHINE does not exists"
	echo "Reason: $MACHINE_PATH does not exist"
	exit 1
fi

if [ ! -e "$MACHINE_PATH/config" ]; then
	echo "Can't load $MACHINE"
	echo "Reason: 'config' does not exist in $MACHINE_PATH"
	exit 2
fi

if [ ! -e "$MACHINE_PATH/var/pid" ]; then
	echo "Machine is not running... exiting"
	exit 1
fi

#LOADING MACHINE CONFIG
source $MACHINE_PATH/config
source $SEAT_PREFIX/seat-$WANT_SEAT
source $SCRIPT_DIR/../kvm/lib-cpu.sh


SOCKET=$MACHINE_PATH/var/control
QEMU_PID=$(<$MACHINE_PATH/var/pid)

printf "Running:\t%s \t | BIOS:\t%s\n" "$WANT_MACHINE" "$BIOS"
printf "PID:\t\t%s\t | CPUSET DIR:\t%s\n" "$QEMU_PID" "$CPUSET_DIR"
printf "Seat:\t\t%s\t | PATH:\t%s\n" "$WANT_SEAT" "$MACHINE_PATH"
printf "CPU Model:\t%s\t | CORES:\t%s (%s)\n" "$CPU_MODEL" "$NUM_CPUS" "${USE_CPUS[*]}"
printf "\nGPU:\t\t%s (%s)\t | VNC: \t%s\n\n" "$GFX_MODE" "$GFX_PCI" "$GFX_VNCPORT"
printf "IPs:\n"

function query() {
	#$SCRIPT_DIR/qmp-send "$MACHINE" '{ "execute": "guest-info" }'
	qga-send "$MACHINE" '{ "execute": "guest-info" }' \
	| jq -r '.return.supported_commands[].name '
	qga-send "$MACHINE" '{"execute":"guest-network-get-interfaces"}' \
	| jq -r '.return[] | .name, .["ip-addresses"][]["ip-address"]'
	return 0
}

query || :

#!/bin/bash

disks=( system data data1 data2 data3 clover )

MACHINE="$1"

backup_disks() {
	  local HOST="$1"
		if [[ -n "$HOST" && "$HOST" != "$(hostname)" ]]; then
			return
		fi
		shift 
		local MACHINE_PATH="$1"
		local vm="$2"
		local d="$3"
		local t=""

		local var="\$DISK_$d"
		iscsi_disk=""
		eval iscsi_disk="$var"
		local path_rawdisk=$(realpath $MACHINE_PATH/disks/$d.raw 2>/dev/null )		
		local path_qcowdisk=$(realpath $MACHINE_PATH/disks/$d.qcow2 2>/dev/null )		
		local disk=""
	
	  if [[ -b $path_rawdisk && "$path_rawdisk" =~ ^/dev/dm-.* ]]; then
	  	local info_vg=$( lvdisplay -c $(readlink $MACHINE_PATH/disks/$d.raw ) 2>/dev/null)
			local path=$(echo $info_vg | cut -d":" -f 1)
			local vg=$(echo $info_vg | cut -d":" -f 2)
			local lv=$(basename $path)
			disk="$vg:$lv:$path"
		  t="blockdev-lvm"
	  elif [[ -b $path_rawdisk ]]; then
			disk=$path_rawdisk
		  t="blockdev-raw"
	  elif [[ -f $path_rawdisk ]]; then
			disk=$path_rawdisk
			t="image-file-raw"
		elif [[ -f $path_qcowdisk || -b $path_rawdisk ]]; then
			disk=$path_qcowdisk
		  t="image-file-qcow2"
		elif [[ -b $path_rawdisk ]]; then
			disk=$path_qcowdisk
		  t="blockdev-qcow2"
		elif [[ -n $iscsi_disk ]]; then
			disk="$iscsi_disk"
			t="iscsi"
 	 fi

		if [[ -n $disk ]]; then
			echo $vm $d $t $disk
		fi
}
if [[ -z $MACHINE ]]; then
for m in /srv/kvm/vms/*/config; do
	MACHINE_PATH="$(dirname $m)"
	vm=$(basename $MACHINE_PATH)
	for d in ${disks[@]}; do 
		declare "DISK_$d"=""
	done

  source $MACHINE_PATH/config

	for d in ${disks[@]}; do 
		backup_disks "$HOST" "$MACHINE_PATH" "$vm" "$d"
	done
done
else 
	MACHINE_PATH="/srv/kvm/vms/$MACHINE"
	vm=$(basename $MACHINE_PATH)
	for d in ${disks[@]}; do 
		declare "DISK_$d"=""
	done

  source $MACHINE_PATH/config

	for d in ${disks[@]}; do 
		backup_disks "$HOST" "$MACHINE_PATH" "$vm" "$d"
	done

fi

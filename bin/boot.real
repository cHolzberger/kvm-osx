#!/bin/bash

set -e

echo "KVM Machine boot"
SCRIPT_DIR=$(dirname $(readlink -f $0))

BIOS="efi"
OS="win"


source $SCRIPT_DIR/config-common
source $SCRIPT_DIR/config-machine

if [ "x$MACHINE" == "x" ]; then
	echo "Usage:"
	echo "$0 [machine-name]"
	exit 3
fi

if [ ! -d "$MACHINE_PATH" ]; then
	echo "Machine $MACHINE does not exists"
	echo "Reason: $MACHINE_PATH does not exist"
	exit 1
fi

if [ ! -e "$MACHINE_PATH/config" ]; then
	echo "Can't load $MACHINE"
	echo "Reason: 'config' does not exist in $MACHINE_PATH"
	exit 2
fi

if [ -e $MACHINE_PATH/var/pid ]; then
	p=$(cat $MACHINE_PATH/var/pid)
	echo "Found pid file... checking if vm is allready running"
	if [ -e "/proc/$p" ]; then
		echo "VM allready running"
		exit 4
	fi	
	rm $MACHINE_PATH/var/pid
fi

echo -e "\tRunning from: $SCRIPT_DIR"

function on_exit() {
 err="$?"

 echo "Done ... cleaing up"
 trap '' EXIT 

 echo "Exit Code: $err" 
 if [[ -e $MACHINE_PATH/var/pid ]]; then
	p=$(cat $MACHINE_PATH/var/pid)
	if [ -e "/proc/$p" ]; then
		kill $p
	fi

	rm $MACHINE_PATH/var/pid
 fi
	exit $err
}

trap on_exit EXIT 

QMP_CMD=(
'{ "execute": "qmp_capabilities" }'
)


cd $RUNTIME_PATH

source kvm/lib-helper.sh
source kvm/common-$OS.sh
source kvm/bios-$BIOS.sh
source kvm/cpu-$CPU_MODEL.sh

source kvm/usb-$USB_MODE.sh
source kvm/gfx-$GFX_MODE.sh
source kvm/hdd-$HDD_MODE.sh
source kvm/teradici.sh 

if [ "$USE_HUGEPAGES" = "1" ]; then
	source kvm/hugepages.sh
fi


[[ ! -z "$NET_MODE" ]] && source kvm/net-$NET_MODE.sh

if [[ ! -z "$NET1_MODE" ]] || [[ ! -z "$NET2_MODE" ]]; then
	echo "NET_MODE: $NET1_MODE $NET2_MODE" 
	source kvm/net-uni.sh
fi

if [ "x$SOUND_MODE" != "x" ]; then
	source kvm/sound-$SOUND_MODE.sh
fi


echo "OPTS: $(echo  $QEMU_OPTS[@] | sed -e "s/-/-\n/g")"
source kvm/run-clover.sh
#source kvm/run-chrt.sh

echo "Execution finished"
cat $MACHINE_PATH/var/debug.log

echo "[ MACHINE TURNED OFF ]"
